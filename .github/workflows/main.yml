name: Build, Test, Push, Measure Coverage with Jacoco

on:
  push:
    branches:
      - "**"
  pull_request_target:
    types: [opened, synchronize, reopened] 

jobs:
  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v4.1.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and run docker containers
        run: |
          docker-compose up -d && \
            docker ps && sleep 5

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          push: true
          tags: dasha12678/user-management-service:latest

  test_coverage:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: users_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: checkout-code
        uses: actions/checkout@v4.1.1

      - name: Set up JDK  
        uses: actions/setup-java@v4.1.0
        with:
          distribution: 'temurin' 
          java-version: 17

      - name: Set the Spring profile
        run: export SPRING_PROFILES_ACTIVE=local

      - name: Clean Maven project
        run: mvn clean

      - name: Run Maven tests
        run: mvn test -Dspring.datasource.url=jdbc:postgresql://localhost:5432/users_db -Dspring.datasource.username=admin -Dspring.datasource.password=123

      - name: Generate Jacoco Report
        run: mvn jacoco:report

      - name: Upload Jacoco coverage report
        uses: actions/upload-artifact@v4.3.1
        with:
          name: jacoco-report
          path: target/site/jacoco/index.html

      - name: Verify coverage
        uses: madrapps/jacoco-report@v1.6.1 #github action to parse the coverage report and verify the coverage?
        with:
          paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.TOKEN }}
          min-coverage-overall: 80
